@using BooksForYou.Web.ViewModels.Users;
@model UserEditViewModel

@{
    ViewData["Title"] = "User Edit";
}

<div class="row g-5">
           <div class="col-sm-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
            <form id="edit" method="post">
                <input type="hidden" name="Id" value="@Model.Id" />
                <div class="row g-3">
                    <div asp-validation-summary="ModelOnly" class=" = text-danger"></div>
                    <div class="col-sm-6">
                        <label asp-for="@Model.FirstName" class="form-label"></label>
                        <input asp-for="@Model.FirstName" class="form-control" autocomplete="username" aria-required="true" />
                        <span asp-validation-for="@Model.FirstName" class="text-danger">
                        </span>
                    </div>

                    <div class="col-sm-6">
                        <label asp-for="@Model.LastName" class="form-label"></label>
                        <input asp-for="@Model.LastName" class="form-control" autocomplete="username" aria-required="true" />
                        <span asp-validation-for="@Model.LastName" class="text-danger">
                        </span>
                    </div>

                    <div class="col-12">
                        <label asp-for="@Model.Email" class="form-label"></label>
                        <input asp-for="@Model.Email" class="form-control" autocomplete="username" aria-required="true" />
                        <span asp-validation-for="@Model.Email" class="text-danger">
                        </span>
                    </div>
                </div>
                <hr class="my-4">
                <h4 class="mb-3">Roles</h4>
                <div class="my-3">

                    @for (int i = 0; i < @Model.Roles.Count(); i++)
                    {
                        <div class="form-check">
                            @Html.CheckBoxFor(c => @Model.Roles[i].Selected)
                            @Html.HiddenFor(h => @Model.Roles[i].Value)

                            @Html.LabelFor(l => @Model.Roles[i].Selected, @Model.Roles[i].Text, new {@class="form-check-label"})
                            @Html.HiddenFor(h => @Model.Roles[i].Text)
                        </div>
                    }
                </div class="text-center mb-3">
                <button type="submit" class="btn btn-primary btn-block">Save</button>
                @*<button type="submit" class="btn btn-primary mt-2" data-toggle="modal" data-target="#modalEdit">Save changes</button>*@
          </form>
        </div>
    </div>
@*</div>*@

<div class="text-center mb-3">
    <a asp-action="All">Back to List</a>
</div>

<!-- Modal -->
<div class="modal" id="modalEdit" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm edit</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    Do you confirm this changes?
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="editForm.submit()">Save changes</button>
            </div>
        </div>
    </div>
</div>